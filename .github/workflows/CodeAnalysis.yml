name: Lint and Static Analysis

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Static Code Analysis
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Install dependencies
      - name: Install analysis tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy cppcheck

      # Configure CMake to generate compile_commands.json
      - name: Configure CMake for analysis
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      # Optionally build the project (if needed by clang-tidy)
      - name: Build (optional)
        run: cmake --build build -- -j $(nproc)

      # Run clang-tidy on all .cpp files in stock-api-manager/src/ excluding stock-api-manager/src/libs/
      - name: Run clang-tidy
        run: |
          for file in $(find stock-api-manager/src/ -path "src/libs" -prune -o -type f -name "*.cpp" -print); do
            echo "Analyzing $file"
            clang-tidy "$file" -p build || true
          done > clang-tidy-report.txt

      # Run cppcheck on stock-api-manager/src/ excluding stock-api-manager/src/libs/
      - name: Run cppcheck
        run: |
          cppcheck --enable=all --inconclusive --std=c++17 --force src/ -i src/libs 2> cppcheck-report.txt || true

      # Upload analysis reports for review
      - name: Upload analysis reports
        uses: actions/upload-artifact@v4
        with:
          name: analysis-reports
          path: |
            clang-tidy-report.txt
            cppcheck-report.txt
