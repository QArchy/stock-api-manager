name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - uses: actions/checkout@v3
        with:
          target: desktop

      # Install FFTW3 development library
      - name: Install FFTW3
        run: |
          sudo apt-get update
          sudo apt-get install -y libfftw3-dev

      # Set up Qt 6.8.2 using the jurplel Qt GitHub Action.
      # Note: This action supports Qt 6.5 and later.
      - name: Setup Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.2'
          host: linux
          target: desktop
          modules: qtwebsockets qtconnectivity
        continue-on-error: true  # Allow the job to continue even if this step fails

      # Configure the project with CMake (adjust generator if needed)
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      # Build the project (using parallel builds)
      - name: Build
        run: cmake --build build -- -j $(nproc)

        # Create GitHub Release and upload build artifacts
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*  # Modify this based on where your build artifacts are located
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub automatically provides this secret

      # Upload build artifacts to GitHub Release
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-build-artifacts
          path: build/*  # Modify this based on where your build artifacts are located
